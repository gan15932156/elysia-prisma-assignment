// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// https://www.prisma.io/docs/orm/prisma-client/queries/relation-queries
// https://dev.to/tahsin000/standardized-response-and-global-error-handling-in-nextjs-api-routes-with-prisma-and-zod-2762
// https://www.adarsha.dev/blog/elysia-uniform-response

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator prismabox { 
  provider = "prismabox"
  typeboxImportDependencyName = "elysia"
  typeboxImportVariableName = "t"
  inputModel = true
  output   = "../generated/prismabox"
} 

enum Status {
  CHARGING
  AVAILABLE
}

model Station{
  id        String  @id @default(cuid())
  name      String
  location  String
  chargers  Charger[]
}

model Charger{
  id            String  @id @default(cuid())
  model         String
  connectorType String
  station       Station    @relation(fields: [stationId], references: [id])
  stationId     String
  sessions      Session[]
  status        Status  @default(AVAILABLE)
}

model Session{  
  id            String     @id @default(cuid())
  startTime     DateTime   @default(now())
  endTime       DateTime?
  energyUsedKWh Float?
  pricePerKWh   Float
  totalCost     Float?
  charger       Charger    @relation(fields: [chargerId], references: [id])
  chargerId     String
}